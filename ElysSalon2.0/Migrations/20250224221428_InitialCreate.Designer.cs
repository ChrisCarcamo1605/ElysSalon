// <auto-generated />
using System;
using ElysSalon2._0.aplication;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ElysSalon2._0.Migrations
{
    [DbContext(typeof(ElyDbContext))]
    [Migration("20250224221428_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ElysSalon2._0.domain.Entities.Article", b =>
                {
                    b.Property<int>("articleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("articleId"));

                    b.Property<int?>("articleId1")
                        .HasColumnType("int");

                    b.Property<string>("articleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("articleTypeId")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("priceBuy")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("priceCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("stock")
                        .HasColumnType("int");

                    b.HasKey("articleId");

                    b.HasIndex("articleId1");

                    b.HasIndex("articleTypeId");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("ElysSalon2._0.domain.Entities.ArticleType", b =>
                {
                    b.Property<int>("articleTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("articleTypeId"));

                    b.Property<string>("ArticleTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("articleTypeId");

                    b.ToTable("ArticleTypes");
                });

            modelBuilder.Entity("ElysSalon2._0.domain.Entities.Ticket", b =>
                {
                    b.Property<string>("ticketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("emissionDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("issuer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ticketId1")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("totalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("totalOutTaxes")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("totalWithTaxes")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ticketId");

                    b.HasIndex("ticketId1");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("ElysSalon2._0.domain.Entities.TicketDetails", b =>
                {
                    b.Property<int>("ticketDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ticketDetailsId"));

                    b.Property<int>("articleId")
                        .HasColumnType("int");

                    b.Property<decimal>("price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.Property<int?>("ticketDetailsId1")
                        .HasColumnType("int");

                    b.Property<string>("ticketId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("totalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ticketDetailsId");

                    b.HasIndex("articleId");

                    b.HasIndex("ticketDetailsId1");

                    b.HasIndex("ticketId");

                    b.ToTable("TicketDetails");
                });

            modelBuilder.Entity("ElysSalon2._0.domain.Entities.Article", b =>
                {
                    b.HasOne("ElysSalon2._0.domain.Entities.Article", null)
                        .WithMany("Articles")
                        .HasForeignKey("articleId1");

                    b.HasOne("ElysSalon2._0.domain.Entities.ArticleType", "ArticleType")
                        .WithMany()
                        .HasForeignKey("articleTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ArticleType");
                });

            modelBuilder.Entity("ElysSalon2._0.domain.Entities.Ticket", b =>
                {
                    b.HasOne("ElysSalon2._0.domain.Entities.Ticket", null)
                        .WithMany("TicketDetails")
                        .HasForeignKey("ticketId1");
                });

            modelBuilder.Entity("ElysSalon2._0.domain.Entities.TicketDetails", b =>
                {
                    b.HasOne("ElysSalon2._0.domain.Entities.Article", "article")
                        .WithMany()
                        .HasForeignKey("articleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ElysSalon2._0.domain.Entities.TicketDetails", null)
                        .WithMany("tickets")
                        .HasForeignKey("ticketDetailsId1");

                    b.HasOne("ElysSalon2._0.domain.Entities.Ticket", "Ticket")
                        .WithMany()
                        .HasForeignKey("ticketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ticket");

                    b.Navigation("article");
                });

            modelBuilder.Entity("ElysSalon2._0.domain.Entities.Article", b =>
                {
                    b.Navigation("Articles");
                });

            modelBuilder.Entity("ElysSalon2._0.domain.Entities.Ticket", b =>
                {
                    b.Navigation("TicketDetails");
                });

            modelBuilder.Entity("ElysSalon2._0.domain.Entities.TicketDetails", b =>
                {
                    b.Navigation("tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
